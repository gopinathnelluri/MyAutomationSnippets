Option Explicit

Function GetCurrentWeekDates()
    Dim dtToday, dtFirstDay, dtLastDay
    Dim strFirstDay, strLastDay

    dtToday = Date

    ' Calculate first day of the current week (Sunday)
    dtFirstDay = DateAdd("d", 1 - Weekday(dtToday, vbSunday), dtToday)
    strFirstDay = FormatDateTime(dtFirstDay, 2) ' 2 represents vbShortDate format

    ' Calculate last day of the current week (Saturday)
    dtLastDay = DateAdd("d", 6 - Weekday(dtToday, vbSunday), dtToday)
    strLastDay = FormatDateTime(dtLastDay, 2) ' 2 represents vbShortDate format

    ' Return the result in the desired format
    GetCurrentWeekDates = strFirstDay & " - " & strLastDay
End Function

' Example usage:
' Dim weekDates
' weekDates = GetCurrentWeekDates()
' WScript.Echo weekDates

Sub CreateDraftEmail()
    Dim olApp As Object
    Dim olDraft As Object
    Dim olInspector As Object
    
    ' Create Outlook Application object
    Set olApp = CreateObject("Outlook.Application")
    
    ' Create a new mail item
    Set olDraft = olApp.CreateItem(0)
    
    ' Set email properties
    With olDraft
        .Subject = "Your Subject Here"
        .To = "recipient@example.com"
        .CC = "cc@example.com"
        .BCC = "bcc@example.com"
        .Body = "Type your email body here."
        ' Uncomment the line below if you want to display the email before sending
        '.Display
    End With
    
    ' Get the Inspector object for the draft email
    Set olInspector = olDraft.GetInspector
    
    ' Show the email as a draft
    olInspector.Display
    
    ' Clean up objects
    Set olDraft = Nothing
    Set olInspector = Nothing
    Set olApp = Nothing
End Sub

' Call the subroutine to create the draft email
CreateDraftEmail

